/admin/products:
  get:
    security:
      - apiKey: []
    operationId: admin/ProductController.list
    tags:
      - product
    parameters:
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Order"
      - name: brandId
        in: query
        schema:
          type: integer
    responses:
      "200": { $ref: "#/components/responses/ListProduct" }
      default: { $ref: "#/components/responses/GenericError" }
  post:
    security:
      - apiKey: []
    description: "Create new product"
    operationId: admin/ProductController.create
    tags:
      - product
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProductCreate"
    responses:
      "200": { $ref: "#/components/responses/EditOrCreate" }
      default: { $ref: "#/components/responses/GenericError" }

/admin/products/{id}:
  get:
    tags:
      - product
    operationId: admin/ProductController.get
    parameters:
      - $ref: "#/components/parameters/Id"
    responses:
      "200": { $ref: "#/components/responses/OneProduct" }
      default: { $ref: "#/components/responses/GenericError" }
  delete:
    security:
      - apiKey: []
    description: "Delete product"
    operationId: admin/ProductController.delete
    tags:
      - product
    parameters:
      - $ref: "#/components/parameters/Id"

    responses:
      "200": { $ref: "#/components/responses/EditOrCreate" }
      default: { $ref: "#/components/responses/GenericError" }

  put:
    security:
      - apiKey: []
    description: "Create new product"
    operationId: admin/ProductController.edit
    parameters:
      - $ref: "#/components/parameters/Id"
    tags:
      - product
    requestBody:
      required: true
      content:
        application/json:
          schema:
            properties:
              name:
                type: string
                minLength: 1
                maxLength: 100
              description:
                type: string
              apply:
                type: string
              price:
                type: integer
              brandId:
                type: integer
              tags:
                type: array
                items:
                  type: integer
    responses:
      "200": { $ref: "#/components/responses/EditOrCreate" }
      default: { $ref: "#/components/responses/GenericError" }

/admin/productExtras/{id}/images:
  put:
    x-role: admin
    tags:
      - productExtra
    summary: add productextra image
    security:
      - apiKey: []
    operationId: admin/ProductController.image
    parameters:
      - $ref: "#/components/parameters/Id"
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - file
            properties:
              file:
                type: binary
  delete:
    x-role: admin
    tags:
      - productExtra
    summary: rm productextra image
    security:
      - apiKey: []
    operationId: admin/ProductController.deleteImage
    parameters:
      - $ref: "#/components/parameters/Id"

/admin/productExtras:
  get:
    security:
      - apiKey: []
    operationId: admin/ProductController.listExtra
    tags:
      - productExtra
    parameters:
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Offset"
      - $ref: "#/components/parameters/Order"
    responses:
      #"200": { $ref: "#/components/responses/ListProduct" }
      default: { $ref: "#/components/responses/GenericError" }
  post:
    security:
      - apiKey: []
    description: "Create new product"
    operationId: admin/ProductController.createExtra
    tags:
      - productExtra
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              productId:
                type: integer
              price:
                type: integer
              volume:
                type: integer
              weight:
                type: integer
    responses:
      "200": { $ref: "#/components/responses/EditOrCreate" }
      default: { $ref: "#/components/responses/GenericError" }

/admin/productExtras/{id}:
  delete:
    security:
      - apiKey: []
    description: "Delete product"
    operationId: admin/ProductController.deleteExtra
    tags:
      - productExtra
    parameters:
      - $ref: "#/components/parameters/Id"

    responses:
      "200": { $ref: "#/components/responses/EditOrCreate" }
      default: { $ref: "#/components/responses/GenericError" }

  put:
    security:
      - apiKey: []
    description: "Create new product"
    operationId: admin/ProductController.editExtra
    parameters:
      - $ref: "#/components/parameters/Id"
    tags:
      - productExtra
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              price:
                type: integer
              volume:
                type: integer
              weight:
                type: integer
    responses:
      "200": { $ref: "#/components/responses/EditOrCreate" }
      default: { $ref: "#/components/responses/GenericError" }
