/admin/products:
  get: 
    security: 
      - apiKey: [] 
    operationId: admin/ProductController.list
    tags:
    - product 
    parameters:
      - name: brand
        schema:
          type: integer
        in: query
        required: false
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Offset'
    responses:
      '200':  {$ref: '#/components/responses/ListProduct'}
      default: {$ref: '#/components/responses/GenericError'}

/admin/product:
  post:
    security: 
      - apiKey: [] 
    description: "Create new product"
    operationId: admin/ProductController.create
    tags:
    - product  
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductCreate'
    responses:
      '200': {$ref: '#/components/responses/AfterCreate'}
      default: {$ref: '#/components/responses/GenericError'}

  delete:
    security: 
      - apiKey: [] 
    description: "Delete product"
    operationId: admin/ProductController.delete
    tags:
    - product 
    parameters:
      - name: id
        required: true
        in: query
        schema:
          type: integer 
    responses: 
      '200': {$ref: '#/components/responses/AfterCreate'}
      default: {$ref: '#/components/responses/GenericError'}

/admin/product/{id}:
  get:
    security: 
      - apiKey: [] 
    tags:
    - product 
    operationId: admin/ProductController.get
    parameters:
      - in: path
        name: id
        description: Track ID.
        required: true
        schema:
          type: integer
    responses:
      '200':  {$ref: '#/components/responses/OneProduct'}
      default: {$ref: '#/components/responses/GenericError'}
